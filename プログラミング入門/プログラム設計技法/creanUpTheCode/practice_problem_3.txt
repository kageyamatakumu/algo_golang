<問題文>
  同じような動作をするプログラムでも、さまざまな書き方があります。以下に例を示します。

  括弧の書き方
  ```
  if (x > 0) {
    y = 1;
  }
  // or
  if (x > 0)
  {
    y = 1;
  }
  ```

  インデント幅
  ```
  if (x > 0) {
    y = 1;    // インデント幅が 2
  }
  // or
  if (x > 0) {
      y = 1;  // インデント幅が 4
  }
  ```

  変数宣言の方法
  ```
  for (int i = 0; i < 10; i++) {
    x += i;
  }
  // or
  int i;
  for (i = 0; i < 10; i++) {
      x += i;
  }
  ```

  こうした書き方の差異は、チーム開発など複数人でプログラムを作成する場合に、
  次のような問題につながることがあります。

  ・書き方が統一されないことで、コードが読みにくくなる。
  ・本質的なロジックの部分に集中できず、バグが発生しやすくなったり、
    メンテナンスが大変になったりする。

  こういった問題を避けるため、一定のルールを設けて書き方を統一することがあります。
  このルールのことを コーディング規則 といいます。

<問題>
  次の選択肢のうち、コーディング規則の例として最も適切でないものを 1 つ選んでください。
  ただし、1. から 3. のすべてが適切である場合、4. を選んでください

<選択肢>
  1. インデントにタブ文字を用いるか空白文字を用いるか。
  2. 演算子の前後の空白は 1+1 とするか 1 + 1 とするか。
  3. 関数名を func_name という形式にするか FuncName という形式にするか。

<回答>
  4. 選択肢なし


<問題文>
  次の選択肢のうち、
  コーディング規則に対する態度として最も適切でないものを 1 つ選んでください。

<選択肢>
  1. チームで開発する際、チームのコーディング規則よりも個人の好みを優先した。
  2. コーディング規則に沿うようにコードを整形するツールを利用した。
  3. コーディング規則を作る際、その規則の理由についても記載した。
  4. コーディング規則を作る際、用いるプログラム言語に精通した人物が規則を作った。

<回答>
  1. チームで開発する際、チームのコーディング規則よりも個人の好みを優先した。


